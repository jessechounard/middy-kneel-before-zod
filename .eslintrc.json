{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": ["./tsconfig.json"],
        "createDefaultProgram": true
    },
    "plugins": [
        "@typescript-eslint",
        "unicorn",
        "import",
        "eslint-comments",
        "sonarjs",
        "jest"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:unicorn/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:eslint-comments/recommended",
        "plugin:sonarjs/recommended",
        "plugin:jest/recommended",
        "plugin:jest/style",
        "prettier"
    ],
    "rules": {
        "prefer-arrow-callback": "error",
        "no-console": "warn",
        "unicorn/no-null": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "typeLike",
                "format": ["StrictPascalCase"]
            },
            {
                "selector": "variable",
                "modifiers": ["const"],
                "format": ["StrictPascalCase", "strictCamelCase"]
            },
            {
                "selector": "interface",
                "format": ["StrictPascalCase"],
                "custom": {
                    "regex": "^I[A-Z]|[a-z]I$",
                    "match": false
                }
            },
            {
                "selector": "typeAlias",
                "format": ["StrictPascalCase"],
                "custom": {
                    "regex": "^T[A-Z]|[a-z]T$",
                    "match": false
                }
            },
            {
                "selector": "objectLiteralProperty",
                "format": [
                    "camelCase",
                    "UPPER_CASE",
                    "snake_case",
                    "PascalCase"
                ]
            }
        ],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": ["const", "let", "var"],
                "next": "*"
            },
            {
                "blankLine": "any",
                "prev": ["const", "let", "var"],
                "next": ["const", "let", "var"]
            }
        ],
        "sonarjs/no-duplicate-string": "off"
    },
    "settings": {
        "import/parsers": { "@typescript-eslint/parser": [".ts", ".tsx"] },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                "project": "./"
            },
            "node": { "extensions": [".ts"] }
        }
    }
}
